// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package spotify.proxies;

public class Album
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject albumMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Spotify.Album";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Album_type("Album_type"),
		Href("Href"),
		_id("_id"),
		Name("Name"),
		_type("_type"),
		Uri("Uri"),
		Album_Root("Spotify.Album_Root"),
		Available_markets_Album("Spotify.Available_markets_Album"),
		External_urls_Album("Spotify.External_urls_Album"),
		Images_Album("Spotify.Images_Album");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Album(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Spotify.Album"));
	}

	protected Album(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject albumMendixObject)
	{
		if (albumMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Spotify.Album", albumMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Spotify.Album");

		this.albumMendixObject = albumMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Album.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static spotify.proxies.Album initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return spotify.proxies.Album.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static spotify.proxies.Album initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new spotify.proxies.Album(context, mendixObject);
	}

	public static spotify.proxies.Album load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return spotify.proxies.Album.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Album_type
	 */
	public final String getAlbum_type()
	{
		return getAlbum_type(getContext());
	}

	/**
	 * @param context
	 * @return value of Album_type
	 */
	public final String getAlbum_type(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Album_type.toString());
	}

	/**
	 * Set value of Album_type
	 * @param album_type
	 */
	public final void setAlbum_type(String album_type)
	{
		setAlbum_type(getContext(), album_type);
	}

	/**
	 * Set value of Album_type
	 * @param context
	 * @param album_type
	 */
	public final void setAlbum_type(com.mendix.systemwideinterfaces.core.IContext context, String album_type)
	{
		getMendixObject().setValue(context, MemberNames.Album_type.toString(), album_type);
	}

	/**
	 * @return value of Href
	 */
	public final String getHref()
	{
		return getHref(getContext());
	}

	/**
	 * @param context
	 * @return value of Href
	 */
	public final String getHref(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Href.toString());
	}

	/**
	 * Set value of Href
	 * @param href
	 */
	public final void setHref(String href)
	{
		setHref(getContext(), href);
	}

	/**
	 * Set value of Href
	 * @param context
	 * @param href
	 */
	public final void setHref(com.mendix.systemwideinterfaces.core.IContext context, String href)
	{
		getMendixObject().setValue(context, MemberNames.Href.toString(), href);
	}

	/**
	 * @return value of _id
	 */
	public final String get_id()
	{
		return get_id(getContext());
	}

	/**
	 * @param context
	 * @return value of _id
	 */
	public final String get_id(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames._id.toString());
	}

	/**
	 * Set value of _id
	 * @param _id
	 */
	public final void set_id(String _id)
	{
		set_id(getContext(), _id);
	}

	/**
	 * Set value of _id
	 * @param context
	 * @param _id
	 */
	public final void set_id(com.mendix.systemwideinterfaces.core.IContext context, String _id)
	{
		getMendixObject().setValue(context, MemberNames._id.toString(), _id);
	}

	/**
	 * @return value of Name
	 */
	public final String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of _type
	 */
	public final String get_type()
	{
		return get_type(getContext());
	}

	/**
	 * @param context
	 * @return value of _type
	 */
	public final String get_type(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames._type.toString());
	}

	/**
	 * Set value of _type
	 * @param _type
	 */
	public final void set_type(String _type)
	{
		set_type(getContext(), _type);
	}

	/**
	 * Set value of _type
	 * @param context
	 * @param _type
	 */
	public final void set_type(com.mendix.systemwideinterfaces.core.IContext context, String _type)
	{
		getMendixObject().setValue(context, MemberNames._type.toString(), _type);
	}

	/**
	 * @return value of Uri
	 */
	public final String getUri()
	{
		return getUri(getContext());
	}

	/**
	 * @param context
	 * @return value of Uri
	 */
	public final String getUri(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Uri.toString());
	}

	/**
	 * Set value of Uri
	 * @param uri
	 */
	public final void setUri(String uri)
	{
		setUri(getContext(), uri);
	}

	/**
	 * Set value of Uri
	 * @param context
	 * @param uri
	 */
	public final void setUri(com.mendix.systemwideinterfaces.core.IContext context, String uri)
	{
		getMendixObject().setValue(context, MemberNames.Uri.toString(), uri);
	}

	/**
	 * @return value of Album_Root
	 */
	public final spotify.proxies.Root getAlbum_Root() throws com.mendix.core.CoreException
	{
		return getAlbum_Root(getContext());
	}

	/**
	 * @param context
	 * @return value of Album_Root
	 */
	public final spotify.proxies.Root getAlbum_Root(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		spotify.proxies.Root result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Album_Root.toString());
		if (identifier != null)
			result = spotify.proxies.Root.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Album_Root
	 * @param album_root
	 */
	public final void setAlbum_Root(spotify.proxies.Root album_root)
	{
		setAlbum_Root(getContext(), album_root);
	}

	/**
	 * Set value of Album_Root
	 * @param context
	 * @param album_root
	 */
	public final void setAlbum_Root(com.mendix.systemwideinterfaces.core.IContext context, spotify.proxies.Root album_root)
	{
		if (album_root == null)
			getMendixObject().setValue(context, MemberNames.Album_Root.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Album_Root.toString(), album_root.getMendixObject().getId());
	}

	/**
	 * @return value of Available_markets_Album
	 */
	public final spotify.proxies.Available_markets getAvailable_markets_Album() throws com.mendix.core.CoreException
	{
		return getAvailable_markets_Album(getContext());
	}

	/**
	 * @param context
	 * @return value of Available_markets_Album
	 */
	public final spotify.proxies.Available_markets getAvailable_markets_Album(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		spotify.proxies.Available_markets result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Available_markets_Album.toString());
		if (identifier != null)
			result = spotify.proxies.Available_markets.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Available_markets_Album
	 * @param available_markets_album
	 */
	public final void setAvailable_markets_Album(spotify.proxies.Available_markets available_markets_album)
	{
		setAvailable_markets_Album(getContext(), available_markets_album);
	}

	/**
	 * Set value of Available_markets_Album
	 * @param context
	 * @param available_markets_album
	 */
	public final void setAvailable_markets_Album(com.mendix.systemwideinterfaces.core.IContext context, spotify.proxies.Available_markets available_markets_album)
	{
		if (available_markets_album == null)
			getMendixObject().setValue(context, MemberNames.Available_markets_Album.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Available_markets_Album.toString(), available_markets_album.getMendixObject().getId());
	}

	/**
	 * @return value of External_urls_Album
	 */
	public final spotify.proxies.External_urls getExternal_urls_Album() throws com.mendix.core.CoreException
	{
		return getExternal_urls_Album(getContext());
	}

	/**
	 * @param context
	 * @return value of External_urls_Album
	 */
	public final spotify.proxies.External_urls getExternal_urls_Album(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		spotify.proxies.External_urls result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.External_urls_Album.toString());
		if (identifier != null)
			result = spotify.proxies.External_urls.load(context, identifier);
		return result;
	}

	/**
	 * Set value of External_urls_Album
	 * @param external_urls_album
	 */
	public final void setExternal_urls_Album(spotify.proxies.External_urls external_urls_album)
	{
		setExternal_urls_Album(getContext(), external_urls_album);
	}

	/**
	 * Set value of External_urls_Album
	 * @param context
	 * @param external_urls_album
	 */
	public final void setExternal_urls_Album(com.mendix.systemwideinterfaces.core.IContext context, spotify.proxies.External_urls external_urls_album)
	{
		if (external_urls_album == null)
			getMendixObject().setValue(context, MemberNames.External_urls_Album.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.External_urls_Album.toString(), external_urls_album.getMendixObject().getId());
	}

	/**
	 * @return value of Images_Album
	 */
	public final spotify.proxies.Images getImages_Album() throws com.mendix.core.CoreException
	{
		return getImages_Album(getContext());
	}

	/**
	 * @param context
	 * @return value of Images_Album
	 */
	public final spotify.proxies.Images getImages_Album(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		spotify.proxies.Images result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Images_Album.toString());
		if (identifier != null)
			result = spotify.proxies.Images.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Images_Album
	 * @param images_album
	 */
	public final void setImages_Album(spotify.proxies.Images images_album)
	{
		setImages_Album(getContext(), images_album);
	}

	/**
	 * Set value of Images_Album
	 * @param context
	 * @param images_album
	 */
	public final void setImages_Album(com.mendix.systemwideinterfaces.core.IContext context, spotify.proxies.Images images_album)
	{
		if (images_album == null)
			getMendixObject().setValue(context, MemberNames.Images_Album.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Images_Album.toString(), images_album.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return albumMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final spotify.proxies.Album that = (spotify.proxies.Album) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Spotify.Album";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
